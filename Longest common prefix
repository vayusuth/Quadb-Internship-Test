fn longest_common_prefix(strings: &[String]) -> String {
    if strings.is_empty() {
        return String::new();
    }

    let mut sorted_strings = strings.to_vec();
    sorted_strings.sort();

    let first_string = &sorted_strings[0];
    let last_string = &sorted_strings[sorted_strings.len() - 1];

    let mut common_prefix = String::new();

    for (char_first, char_last) in first_string.chars().zip(last_string.chars()) {
        if char_first != char_last {
            break;
        }
        common_prefix.push(char_first);
    }

    common_prefix
}

fn main() {
    let strings = vec!["flower".to_string(), "flow".to_string(), "flight".to_string()];
    println!("Longest common prefix: {}", longest_common_prefix(&strings));
}
