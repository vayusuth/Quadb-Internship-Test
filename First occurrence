fn first_occurrence(nums: &[i32], target: i32) -> Option<usize> {
    let mut low = 0;
    let mut high = nums.len() - 1;

    while low <= high {
        let mid = low + (high - low) / 2;
        
        if nums[mid] == target {
            // Check if this is the first occurrence
            if mid == 0 || nums[mid - 1] != target {
                return Some(mid);
            } else {
                // Move left to find the first occurrence
                high = mid - 1;
            }
        } else if nums[mid] < target {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    
    None
}

fn main() {
    let nums = vec![1, 2, 2, 3, 3, 3, 4, 5, 5, 6];
    let target = 3;
    
    match first_occurrence(&nums, target) {
        Some(index) => println!("The first occurrence of {} is at index {}", target, index),
        None => println!("{} is not found in the array", target),
    }
}
